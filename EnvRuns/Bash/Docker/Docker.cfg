#!/bin/bash

#environment specific config
#ActiveMQ tcp port
cfgAmqBroker=tcp://severusqa-submission1.epic.com:61616
#ActiveMQ url (append /admin/ to this and you should be able to hit this page with a browser)
cfgMonServer=severusqa-submission1.epic.com
#SQL server
cfgSqlUrl=jdbc:sqlserver://vista-client.epic.com
#SQL server login
cfgSqlLogin=va
#SQL server password
cfgSqlPwd=va


#Docker's host server path for location of java keystore, i.e. keystore.jks
#Must point at a folder that has the following subfolders
# ssl, logs, amq, testing
cfgHostPath=/net_home/daves/Adapter


#DO NOT specify https here.  It is automatically converted to https below if cfgUseSSL is set to 1
#Epic's Interconnect server (outgoing from VistA)
#dest=http://vs-icx18-34/Interconnect-Department-of-Veterans-Affairs-CFB/api/epic/2015/EDI/HTTP/HL7V2
dest=http://epic24212.dhcp.epic.com/Interconnect-I8321379/api/epic/2015/edi/http/hl7v2

#Ensemble's server (incoming to VistA)
indest=http://vs-icx18-9/Interconnect-2017-SU-Stage1-Primary-Base/api/epic/2015/EDI/HTTP/HL7V2
#Interface endpoints
cfgIntInsched=${indest}/559507
cfgIntError=${dest}/334999
cfgIntOrder=${dest}/334375
cfgIntSched=${dest}/334501
cfgIntDemogADT=${dest}/334701
cfgIntDemogORU=${dest}/334701


#Nail Config
# Comment in to send to nail receivers
cfgIntInsched=http://${cfgMonServer}:5101/receive
cfgIntError=http://${cfgMonServer}:5201/receive
cfgIntOrder=http://${cfgMonServer}:5301/receive
cfgIntSched=http://${cfgMonServer}:5401/receive
cfgIntDemogADT=http://${cfgMonServer}:5501/receive
cfgIntDemogORU=http://${cfgMonServer}:5601/receive
#Sample curl to see if nail is listening...
#curl -H "Content-Type: application/json" -X POST -d '{"username":"xyz","password":"xyz"}' http://severusqa-submission1.epic.com:5101/receive


#File Transfer endpoints
#DO NOT specify https here.  It is automatically converted to https below if cfgUseSSL is set to 1
cfgPcmmQueryFullDestGet=http://epic31921.dhcp.epic.com:5105/PCMM_full
cfgPcmmQueryDeltaDestGet=http://epic31921.dhcp.epic.com:5105/PCMM_delta
cfgPcmmQueryStatusDestGet=http://epic31921.dhcp.epic.com:5105/PCMM_status
cfgPcmmFileGetDestGet=http://epic31921.dhcp.epic.com:5105/PCMM_file
cfgAcDestGet=http://epic31921.dhcp.epic.com:5105/AC_get
cfgAcDestPost=http://epic31921.dhcp.epic.com:5105/AC_post


#Receiver gets extra... all others use default in DockerOpts
cfgRcvMem=800m


#Java options
#!!! MUST BE 6 !!!
#cfgJavaOpts1="-Djavax.net.ssl.trustStore=/hostpath/ssl/cacerts"
#cfgJavaOpts2="-Djavax.net.ssl.trustStorePassword=changeit"
#cfgJavaOpts3="-Djavax.net.debug=ssl"
#cfgJavaOpts4="-XX:+UseG1GC"
#cfgJavaOpts5="-XX:+PrintCommandLineFlags"
#cfgJavaOpts6="-XX:+PrintFlagsInitial"

#cfgJavaOpts5="-XX:+PrintFlagsFinal"
#cfgJavaOpts6="-XX:+UnlockDiagnosticVMOptions"


#cfgJavaOpts4="-Xloggc:logs/gc.txt"
#$cfgJavaOpts5="-XX:+UseGCLogFileRotation"
#$cfgJavaOpts6="-XX:NumberOfGCLogFiles=10"
#cfgJavaOpts4="-XX:GCLogFileSize=100m"


#cfgJavaOpts4="-XX:+PrintFlagsFinal"
#cfgJavaOpts5="-XX:+PrintGCDetails"
#cfgJavaOpts6="-XX:+UseG1GC"


#set to false to allow http instead of https
cfgUseSSL=0

if [ $cfgUseSSL -gt 0 ] ; then
	#java keystore files's name
	cfgKeystoreName=severusqa-submission1.jks
	#java keystore's password
	cfgKeystorePwd=accesscode
	#server certificate's password (often the same as java keystore password)
	cfgKeyPwd=accesscode
	
	#java truststore files's name
	cfgTruststoreName=cacerts
	#java truststore's password
	cfgTruststorePwd=changeit
	#server certificate's password (often the same as java truststore password)
	cfgTrustPwd=changeit
	
	cfgPcmmQueryFullDestGet="${cfgPcmmQueryFullDestGet/http:/https:}"
	cfgPcmmQueryDeltaDestGet="${cfgPcmmQueryDeltaDestGet/http:/https:}"
	cfgPcmmQueryStatusDestGet="${cfgPcmmQueryStatusDestGet/http:/https:}"
	cfgPcmmFileGetDestGet="${cfgPcmmFileGetDestGet/http:/https:}"
	cfgAcDestGet="${cfgAcDestGet/http:/https:}"
	cfgAcDestPost="${cfgAcDestPost/http:/https:}"
	
	cfgIntInsched="${cfgIntInsched/http:/https:}"
	cfgIntError="${cfgIntError/http:/https:}"
	cfgIntOrder="${cfgIntOrder/http:/https:}"
	cfgIntSched="${cfgIntSched/http:/https:}"
	cfgIntDemogADT="${cfgIntDemogADT/http:/https:}"
	cfgIntDemogORU="${cfgIntDemogORU/http:/https:}"
fi
