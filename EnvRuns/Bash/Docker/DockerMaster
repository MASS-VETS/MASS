#!/bin/bash

#descriptive names for incoming params
reConfig=$1
rebuildI=$2
configFile=$3

if [ ${#reConfig} -eq 0 ] ; then
	reConfig=0
fi
if [ ${#rebuildI} -eq 0 ] ; then
	rebuildI=0
fi
if [ ${#configFile} -eq 0 ] ; then
	configFile=Docker.cfg
fi

#environment specific config
#sets all cfg* variables
source $configFile


#--- Copy sample messages to the testing host folder
echo "*** Copy samplemessages to ${cfgHostPath}/testing"
cp -R samplemessages/. ${cfgHostPath}/testing


#Stop all Docker Containers
echo "*** Stop all Docker Containers"
cmd/DockerStopC

#Remove all hammer containers (so that they don't get restared below)
echo "*** Remove all Docker Containers"
#--- Remove all hammer containers
containers=$(docker ps -q -a -f name=hammer)
if [ ${#containers} -gt 0 ] ; then
	docker rm -f $containers
fi

if [ $reConfig -gt 0 ] ; then
	#Remove all containers (except ActiveMQ)
	cmd/DockerRmvC
fi

#delete all docker images and rebuild them, but only if asked to
echo "*** Delete all Docker Images"
if [ $rebuildI -gt 0 ] ; then
	#remove Docker container ActiveMQ (losing all queue entries)
	cmd/DockerRmvCAmq
	#Clear all Docker Images
	cmd/DockerClearI
	#Build docker images
	cmd/DockerBuild
	#reRun Docker container ActiveMQ (losing all queue entries)
	cmd/DockerRunAmq $configFile
else
	#restart Docker container ActiveMQ
	cmd/DockerStartCAmq
fi

if [ $reConfig -gt 0 ] ; then
	#Docker container SQL
	cmd/DockerRunSql $configFile
	cmd/DockerRunMon $configFile
	#Docker container all File Transfer Instances
	./DockerFileXfers $configFile
	#Docker container all Interface Instances
	./DockerInts $configFile
else
	cmd/DockerStartC
fi

#Docker container stats
cmd/DockerStats
