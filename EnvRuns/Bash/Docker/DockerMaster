#!/bin/bash

#descriptive names for incoming params
reConfig=$1
rebuildI=$2
configFile=$3

if [ ${#reConfig} -eq 0 ] ; then
	reConfig=0
fi
if [ ${#rebuildI} -eq 0 ] ; then
	rebuildI=0
fi
if [ ${#configFile} -eq 0 ] ; then
	configFile=Docker.cfg
fi

#environment specific config
#sets all cfg* variables
source $configFile


#--- Copy sample messages to the testing host folder
echo "*** Copy samplemessages to ${cfgHostPath}/testing"
cp -R samplemessages/. ${cfgHostPath}/testing


#Stop all Docker Containers
echo "*** Stop all Docker Containers"
cmd/DockerStopC


if [ $reConfig -gt 0 ] ; then
	echo "*** Remove all Docker Containers"
	#Remove all containers
	cmd/DockerRmvC
else
	#Remove all hammer and nail containers (so that they don't get restarted below)
	echo "*** Remove hammer and nail Containers"
	#--- Remove hammer and nail containers
	containers=$(docker ps -q -a -f name=hammer -f name=nail)
	if [ ${#containers} -gt 0 ] ; then
		docker rm -f $containers
	fi
fi


#delete all docker images and rebuild them, but only if asked to
if [ $rebuildI -gt 0 ] ; then
	echo "*** Delete all Docker Images"
	#Clear all Docker Images
	cmd/DockerClearI
	#Build docker images
	cmd/DockerBuild
fi

if [ $reConfig -gt 0 ] ; then
	echo "*** Run SQL Docker Container"
	cmd/DockerRunSql $configFile
	echo "*** Run Monitor Docker Container"
	cmd/DockerRunMon $configFile
	echo "*** Run File Transfer Docker Containers"
	./DockerFileXfers $configFile
	echo "*** Run Interface Docker Containers"
	./DockerInts $configFile
	echo "*** Run ActimeMQ Docker Container"
	cmd/DockerRunAmq $configFile
else
	echo "*** Restart all Docker Containers"
	cmd/DockerStartC
fi

#Docker container stats
cmd/DockerStats
